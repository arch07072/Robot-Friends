{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","searchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","SearchBox","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAeeA,EAbF,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCgBXC,EArBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAGhB,OACI,8BAEQA,EAAOC,KAAK,SAACC,EAAKC,GACd,OACI,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHZK,SCEdC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACIA,UAAY,mCACZc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIXI,EAVA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAQ,SAAnE,SACItB,EAAMuB,YC+CHC,G,wDA7CX,aAAc,IAAD,8BACT,gBAiBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAjBxC,EAAKC,MAAM,CACPtB,OAAO,GACPK,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKR,SAAS,CAACnB,OAAO2B,S,oBAS9B,WACI,MAA6BC,KAAKN,MAA3BtB,EAAP,EAAOA,OAAOK,EAAd,EAAcA,YACRwB,EAAiB7B,EAAO8B,QAAQ,SAAAC,GAClC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS5B,EAAY2B,kBAGzD,OAAIhC,EAAOkC,OAIP,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC0C,EAAD,CAAW7B,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAS6B,SAPhB,6C,GA9BDO,cCKHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OACM,cAAC,EAAD,IACEC,SAASC,eAAe,SAMzCX,M","file":"static/js/main.f756df86.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) =>{\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='photos' src={`https://robohash.org/${props.id}?200*200`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../components/Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n    \r\n\r\n    return(\r\n        <div>   \r\n        {\r\n                robots.map( (user,i) => {\r\n                    return (\r\n                        <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                 })\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst searchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className = 'pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default searchBox","\r\nimport React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY:'scroll', border:'5px solid black', height: '800px'}}>\r\n           {props.children}\r\n\r\n       </div>\r\n    ) ;\r\n     \r\n}\r\n\r\nexport default Scroll;\r\n\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={          \r\n            robots:[] ,\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({robots:users})\r\n        }); \r\n       \r\n    }\r\n\r\n    onSearchChange = (event) =>{       \r\n        this.setState({searchfield:event.target.value })\r\n    } \r\n\r\n    render(){\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter( robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        if(!robots.length){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n        return(\r\n            <div className='tc'> \r\n                <h1 className='f1'>Robot friends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <CardList robots ={filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n         }\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n               <App/>\n                ,document.getElementById('root')\n                );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}